% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shorten_condition.R
\name{shorten_condition}
\alias{shorten_condition}
\title{Shorten the predicates within a condition}
\usage{
shorten_condition(x, method = "letters")
}
\arguments{
\item{x}{a character vector of conditions, each formatted as a string
(e.g., \code{"{a=1,b=100,c=3}"}).}

\item{method}{a character scalar specifying the method to use for
shortening the predicates. It must be one of \code{"letters"}, \code{"abbrev4"},
or \code{"abbrev8"}. Default is \code{"letters"}.}
}
\value{
A character vector of conditions with shortened predicates.
}
\description{
This function takes a character vector of conditions and shortens the
predicates within each condition using a specified method.
}
\details{
Each value in \code{x} is a condition formatted as a string, e.g.,
\code{"{a=1,b=100,c=3}"} (see \code{\link[=format_condition]{format_condition()}}). The function
shortens the predicates in each condition according to the specified
\code{method}. The available methods are:
\itemize{
\item \code{"letters"}: predicates are replaced with single letters from the
English alphabet, starting with \code{A} for the first predicate;
\item \code{"abbrev4"}: predicates are abbreviated to 4 characters using
\code{\link[=abbreviate]{abbreviate()}} function;
\item \code{"abbrev8"}: predicates are abbreviated to 8 characters using
\code{\link[=abbreviate]{abbreviate()}} function;
\item \code{"none"}: no shortening is applied, predicates remain unchanged.
}
}
\seealso{
\code{\link[=format_condition]{format_condition()}}, \code{\link[=parse_condition]{parse_condition()}}
}
\author{
Michal Burda
}
